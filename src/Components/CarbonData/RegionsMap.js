import React from 'react';
import Headlines from '../Headlines/Headlines';
import PiechartLine from '../Piechart/PiechartLine';
import { RegionHeader, Region } from './Region';
import WeatherOverlay from './WeatherOverlay';

class RegionPolygon extends React.Component {
  constructor(props) {
    super(props);
    this.selectRegion = this.selectRegion.bind(this);
    this.style = 'fill: gray';
    this.setSelectedRegion = this.props.setSelectedRegion;
  }
  getClassName = function() {
    return {
      'very low': 'very-low',
      low: 'low',
      moderate: 'moderate',
      high: 'high',
      'very high': 'very-high',
    }[this.props.regionData.intensity.index];
  };
  selectRegion = function() {
    this.setSelectedRegion(this.props.regionData);
  };
  render() {
    if (Array.isArray(this.props.points)) {
      return (
        <g
          className={`region ${this.getClassName()}`}
          onClick={this.selectRegion}
        >
          {this.props.points.map((poly, index) => (
            <polygon key={index} points={poly} />
          ))}
        </g>
      );
    }
    return (
      <polygon
        className={`region ${this.getClassName()}`}
        onClick={this.selectRegion}
        points={this.props.points}
      />
    );
  }
}

function RegionsMap(props) {
  const getRegionPolygon = function(regionId) {
    let regionPolygons = {
        1: [
          '367.6 109.6 348.9 154.5 335.4 171.3 316.5 178.5 319.9 188.4 310 190 302.8 185.9 282.5 200.6 268.2 193.1 261.1 213.7 257.3 208.7 244.2 241.4 234.9 241.4 239.5 212.4 235.8 202.1 223.6 222.7 207.7 214.3 238.6 188.1 251.7 151.7 232.1 178.8 212.4 180.6 238.6 126.4 227.4 134.8 201.2 115.2 217.1 92.8 233 116.1 262.9 34.8 326.5 34.8 327.4 52.6 284.4 103 317.1 91.8 333 91.8 345.2 99.3 362 90.9',
          '175 144.2 188.1 133 191.9 99.3 188.8 92.3 176.9 97.4 177.8 132',
          '196.5 91.8 215.8 75.3 216.2 58.2 222.7 49.8 220.2 41.9 192.8 61.9 189.9 71.2 195.6 78.8 191.9 83.6',
        ],
        2: '340.1 242.6 346.1 235.8 356.1 231.7 352.3 220.8 362.5 209.7 357.3 203.1 335.8 192.8 324.6 201.2 314.3 198.4 340.5 181.6 334 173.2 335.4 171.3 316.5 178.5 319.9 188.4 310 190 302.8 185.9 282.5 200.6 268.2 193.1 261.1 213.7 271.3 227.4 253.6 264.8 262 279.7 307.8 269.4 307.7 271.8 324.9 259.8',
        3: '369.2 355.8 365.7 352.3 366.3 351.5 369.8 345.8 358.3 335.2 358.3 326.8 349.5 322.7 354.5 306.1 355.8 301.9 352 298.4 356.7 286.3 341.4 260.4 340.1 242.6 324.9 259.8 307.7 271.8 306.8 290 319 312.4 332.1 308.7 325.5 325.5 326.1 340.1 349 352.6 353.6 351.7 352.4 360 355.2 362.7',
        4: '356.1 231.7 346.1 235.8 340.1 242.6 341.4 260.4 356.7 286.3 352 298.4 355.8 301.9 354.5 306.1 363.4 317.4 384.4 316.7 387.9 322.3 404.8 309.6 408.3 300.5 417.6 299.8 407.8 283.5 386.3 276 374.1 224.6 362.5 209.7 352.3 220.8',
        5: '404.8 309.6 387.9 322.3 384.4 316.7 363.4 317.4 354.5 306.1 349.5 322.7 358.3 326.8 358.3 335.2 369.8 345.8 366.3 351.5 394.9 358.1 395.5 348 405 352 403.8 359.7 420 360.3 428.9 360.3 437.3 354.7 421.8 306.8 417.6 299.8 408.3 300.5',
        6: '322.4 402.5 328.7 385.7 343 382.9 353.6 363.6 355.2 362.7 352.4 360 353.6 351.7 349 352.6 326.1 340.1 326.5 351.7 292.8 358.3 276.9 345.2 269.4 356.4 282.5 367.6 266.6 381.6 274.1 384.4 289.1 376.9 290 409.8',
        7: '334.6 432.2 329.7 432.8 324.2 422.1 329.4 409.9 322.1 402.6 290 409.8 250.7 432.1 260.1 448.9 280.7 439.6 297.5 449.9 312.4 461.1 327 453.5 337.7 448 339.8 436.8',
        8: '355.2 451.7 360.1 443.3 375.5 427.2 387.2 427.4 371.1 411.3 367.6 376.9 369.7 365 363.6 358.5 355.2 362.7 353.6 363.6 343 382.9 328.7 385.7 322.4 402.5 322.1 402.6 329.4 409.9 324.2 422.1 329.7 432.8 334.6 432.2 339.8 436.8 337.7 448 355 461.6',
        9: '420 360.3 403.8 359.7 405 352 395.5 348 394.9 358.1 366.3 351.5 365.7 352.3 369.2 355.8 363.6 358.5 369.7 365 367.6 376.9 371.1 411.3 387.2 427.4 394.1 434.9 405.3 432.4 416.2 396 420.9 391.9 428.7 392.2 437.4 383.1 431.2 376 440.5 364.8 437.3 354.7 428.9 360.3',
        10: '470.4 372.3 447.1 372.3 437.7 383.5 437.4 383.1 428.7 392.2 420.9 391.9 416.2 396 405.3 432.4 394.1 434.9 391 438.3 400 445.2 420.9 453.9 420.4 449.3 426.1 449.7 432.7 445.2 434 453.6 436.8 456.7 444.3 456.1 456.8 452.9 471.4 434.9 485.4 415.3 489.1 387.2',
        11: '337.7 448 325.5 463 324.6 472.3 287.2 467.6 277.9 482.6 276 493.8 244.9 519.7 235.8 528.4 256.4 532.1 275.1 515.3 286.3 513.4 307.8 524.7 314.3 503.2 333 493.8 333.4 494.2 355 461.6',
        12: '417.1 478.5 416.8 475.4 408.4 474.5 406.6 463.3 420.9 453.9 400 445.2 391 438.3 394.1 434.9 387.2 427.4 375.5 427.2 360.1 443.3 355.2 451.7 355 461.6 333.4 494.2 345.2 505 369.5 493.8 388.2 503.2 408.7 491.9 412 492.3 413.4 481',
        13: '432.7 445.2 426.1 449.7 420.4 449.3 420.9 453.9 419.3 460.8 429.9 461.4 436.8 456.7 434 453.6',
        14: '436.8 456.7 429.9 461.4 419.3 460.8 420.9 453.9 406.6 463.3 408.4 474.5 416.8 475.4 417.1 478.5 413.4 481 412 492.3 437.7 494.7 476 471.4 476 460.2 453.6 456.9 456.8 452.9 444.3 456.1',
      },
      regionPolygon = regionPolygons[regionId] || '';

    return regionPolygon;
  };

  return (
    <div className="uk-column-1-2">
      <div className="uk-container">
        <svg
          version="1.1"
          viewBox="0 0 500 566.9"
          xmlns="http://www.w3.org/2000/svg"
          className="regionMap"
        >
          <WeatherOverlay weatherImg={props.weatherImg}/>
          <Headlines newsArticles={props.newsArticles} />
          <polygon
            className="no-data"
            stroke="rgba(15,110, 205,.4)"
            points="92.8 302.2 141.4 299.4 154.5 284.4 135.8 279.7 146 265.7 145.1 253.6 184.4 236.7 199.3 246.1 215.2 244.2 225.5 246.1 248.9 293.7 216.2 320.9 225.5 359.2 214.3 418.1 177.8 421.8 152.6 440.5 112.4 454.5 99.3 453.6 78.7 431.2 97.4 420.9 77.8 419 89 408.7 102.1 409.7 112.4 392.8 98.4 394.7 116.1 368.5 130.2 360.1 107.7 361.1 90 347 100.2 328.3 87.1 320.9"
          />
          {props.regions.map(region => (
            <RegionPolygon
              key={region.regionid}
              points={getRegionPolygon(region.regionid)}
              regionData={region}
              setSelectedRegion={props.setSelectedRegion}
            />
          ))}
        </svg>
      </div>
      <div className="uk-card uk-card-body">
        <div>
          <div>
            <PiechartLine fuelTypes={props.selectedRegion.generationmix} />
          </div>
          <RegionHeader region={props.selectedRegion} />
        </div>
        <Region region={props.selectedRegion} />
      </div>
    </div>
  );
}

export default RegionsMap;
